{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let ProductComponent = class ProductComponent {\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n    this.form = {\n      data: {\n        name: '',\n        description: '',\n        price: null,\n        dateOfPurchase: '',\n        category: '',\n        message: null\n      },\n      inputerror: {}\n    };\n    this.selectedFile = null;\n  }\n  // Function to handle file selection\n  onFileSelected(event) {\n    this.selectedFile = event.target.files[0];\n  }\n  // onSubmit function: Will handle both product addition and image upload\n  onSubmit() {\n    // Step 1: Add the product details\n    this.http.post('http://localhost:8080/api/products', this.form.data).subscribe(response => {\n      if (response.success) {\n        this.form.message = 'Product added successfully!';\n        // Step 2: If a file was selected, upload the image\n        if (this.selectedFile) {\n          this.uploadImage(response.result.productId);\n        }\n      }\n    }, error => {\n      console.error('Error adding product:', error);\n      this.form.message = 'Failed to add product.';\n      this.form.inputerror = error.error.inputerror;\n    });\n  }\n  // Function to handle image upload\n  uploadImage(productId) {\n    const formData = new FormData();\n    formData.append('file', this.selectedFile);\n    this.http.post(`http://localhost:8080/profile/${productId}`, formData).subscribe(response => {\n      if (response.success) {\n        this.form.message = 'Product and image added successfully!';\n      }\n    }, error => {\n      console.error('Error uploading image:', error);\n      this.form.message = 'Product added but image upload failed.';\n    });\n  }\n};\nProductComponent = __decorate([Component({\n  selector: 'app-product',\n  templateUrl: './product.component.html',\n  styleUrls: ['./product.component.css']\n})], ProductComponent);","map":{"version":3,"names":["Component","ProductComponent","constructor","http","router","form","data","name","description","price","dateOfPurchase","category","message","inputerror","selectedFile","onFileSelected","event","target","files","onSubmit","post","subscribe","response","success","uploadImage","result","productId","error","console","formData","FormData","append","__decorate","selector","templateUrl","styleUrls"],"sources":["E:\\FrontEnd\\E-CommerceUI\\src\\app\\products\\products.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-product',\n  templateUrl: './product.component.html',\n  styleUrls: ['./product.component.css']\n})\nexport class ProductComponent {\n  form = {\n    data: {\n      name: '',\n      description: '',\n      price: null,\n      dateOfPurchase: '',\n      category: '',\n      message: null\n    },\n   \n    inputerror: {}\n  };\n\n  selectedFile: File = null;\n\n  constructor(private http: HttpClient, private router: Router) {}\n\n  // Function to handle file selection\n  onFileSelected(event) {\n    this.selectedFile = <File>event.target.files[0];\n  }\n\n  // onSubmit function: Will handle both product addition and image upload\n  onSubmit() {\n    // Step 1: Add the product details\n    this.http.post('http://localhost:8080/api/products', this.form.data).subscribe(\n      (response: any) => {\n        if (response.success) {\n          this.form.message = 'Product added successfully!';\n          \n          // Step 2: If a file was selected, upload the image\n          if (this.selectedFile) {\n            this.uploadImage(response.result.productId);\n          }\n        }\n      },\n      (error) => {\n        console.error('Error adding product:', error);\n        this.form.message = 'Failed to add product.';\n        this.form.inputerror = error.error.inputerror;\n      }\n    );\n  }\n\n  // Function to handle image upload\n  uploadImage(productId: number) {\n    const formData = new FormData();\n    formData.append('file', this.selectedFile);\n\n    this.http.post(`http://localhost:8080/profile/${productId}`, formData).subscribe(\n      (response: any) => {\n        if (response.success) {\n          this.form.message = 'Product and image added successfully!';\n        }\n      },\n      (error) => {\n        console.error('Error uploading image:', error);\n        this.form.message = 'Product added but image upload failed.';\n      }\n    );\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AASlC,WAAMC,gBAAgB,GAAtB,MAAMA,gBAAgB;EAgB3BC,YAAoBC,IAAgB,EAAUC,MAAc;IAAxC,KAAAD,IAAI,GAAJA,IAAI;IAAsB,KAAAC,MAAM,GAANA,MAAM;IAfpD,KAAAC,IAAI,GAAG;MACLC,IAAI,EAAE;QACJC,IAAI,EAAE,EAAE;QACRC,WAAW,EAAE,EAAE;QACfC,KAAK,EAAE,IAAI;QACXC,cAAc,EAAE,EAAE;QAClBC,QAAQ,EAAE,EAAE;QACZC,OAAO,EAAE;OACV;MAEDC,UAAU,EAAE;KACb;IAED,KAAAC,YAAY,GAAS,IAAI;EAEsC;EAE/D;EACAC,cAAcA,CAACC,KAAK;IAClB,IAAI,CAACF,YAAY,GAASE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;EACjD;EAEA;EACAC,QAAQA,CAAA;IACN;IACA,IAAI,CAAChB,IAAI,CAACiB,IAAI,CAAC,oCAAoC,EAAE,IAAI,CAACf,IAAI,CAACC,IAAI,CAAC,CAACe,SAAS,CAC3EC,QAAa,IAAI;MAChB,IAAIA,QAAQ,CAACC,OAAO,EAAE;QACpB,IAAI,CAAClB,IAAI,CAACO,OAAO,GAAG,6BAA6B;QAEjD;QACA,IAAI,IAAI,CAACE,YAAY,EAAE;UACrB,IAAI,CAACU,WAAW,CAACF,QAAQ,CAACG,MAAM,CAACC,SAAS,CAAC;;;IAGjD,CAAC,EACAC,KAAK,IAAI;MACRC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7C,IAAI,CAACtB,IAAI,CAACO,OAAO,GAAG,wBAAwB;MAC5C,IAAI,CAACP,IAAI,CAACQ,UAAU,GAAGc,KAAK,CAACA,KAAK,CAACd,UAAU;IAC/C,CAAC,CACF;EACH;EAEA;EACAW,WAAWA,CAACE,SAAiB;IAC3B,MAAMG,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAE,IAAI,CAACjB,YAAY,CAAC;IAE1C,IAAI,CAACX,IAAI,CAACiB,IAAI,CAAC,iCAAiCM,SAAS,EAAE,EAAEG,QAAQ,CAAC,CAACR,SAAS,CAC7EC,QAAa,IAAI;MAChB,IAAIA,QAAQ,CAACC,OAAO,EAAE;QACpB,IAAI,CAAClB,IAAI,CAACO,OAAO,GAAG,uCAAuC;;IAE/D,CAAC,EACAe,KAAK,IAAI;MACRC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9C,IAAI,CAACtB,IAAI,CAACO,OAAO,GAAG,wCAAwC;IAC9D,CAAC,CACF;EACH;CACD;AA9DYX,gBAAgB,GAAA+B,UAAA,EAL5BhC,SAAS,CAAC;EACTiC,QAAQ,EAAE,aAAa;EACvBC,WAAW,EAAE,0BAA0B;EACvCC,SAAS,EAAE,CAAC,yBAAyB;CACtC,CAAC,C,EACWlC,gBAAgB,CA8D5B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}