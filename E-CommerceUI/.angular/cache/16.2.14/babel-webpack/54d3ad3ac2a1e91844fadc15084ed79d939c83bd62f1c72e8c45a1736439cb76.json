{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport class HttpServiceService {\n  constructor(httpClient, router) {\n    this.httpClient = httpClient;\n    this.router = router;\n    console.log('in HttpServiceService constructor');\n  }\n  post(endpoint, bean, callback) {\n    return this.httpClient.post(endpoint, bean).subscribe(data => {\n      callback(data);\n    }, error => {\n      console.log('fail', error);\n    });\n  }\n  get(endpoint, callback) {\n    return this.httpClient.get(endpoint).subscribe(data => {\n      callback(data);\n    }, error => {\n      console.log('fail', error);\n    });\n  }\n  static #_ = this.ɵfac = function HttpServiceService_Factory(t) {\n    return new (t || HttpServiceService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: HttpServiceService,\n    factory: HttpServiceService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpServiceService","constructor","httpClient","router","console","log","post","endpoint","bean","callback","subscribe","data","error","get","_","i0","ɵɵinject","i1","HttpClient","i2","Router","_2","factory","ɵfac","providedIn"],"sources":["E:\\FrontEnd\\E-CommerceUI\\src\\app\\services\\http-service.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpServiceService {\n\n  constructor(private httpClient: HttpClient, private router: Router) {\n    console.log('in HttpServiceService constructor')\n  }\n\n  post(endpoint: any, bean: any, callback: any) {\n    return this.httpClient.post(endpoint, bean).subscribe(data => {\n      callback(data);\n    }, (error) => {\n      console.log('fail', error);\n    });\n  }\n\n  get(endpoint: any, callback: any) {\n    return this.httpClient.get(endpoint).subscribe(data => {\n      callback(data);\n    }, (error) => {\n      console.log('fail', error);\n    });\n  }\n}"],"mappings":";;;AAOA,OAAM,MAAOA,kBAAkB;EAE7BC,YAAoBC,UAAsB,EAAUC,MAAc;IAA9C,KAAAD,UAAU,GAAVA,UAAU;IAAsB,KAAAC,MAAM,GAANA,MAAM;IACxDC,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;EAClD;EAEAC,IAAIA,CAACC,QAAa,EAAEC,IAAS,EAAEC,QAAa;IAC1C,OAAO,IAAI,CAACP,UAAU,CAACI,IAAI,CAACC,QAAQ,EAAEC,IAAI,CAAC,CAACE,SAAS,CAACC,IAAI,IAAG;MAC3DF,QAAQ,CAACE,IAAI,CAAC;IAChB,CAAC,EAAGC,KAAK,IAAI;MACXR,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEO,KAAK,CAAC;IAC5B,CAAC,CAAC;EACJ;EAEAC,GAAGA,CAACN,QAAa,EAAEE,QAAa;IAC9B,OAAO,IAAI,CAACP,UAAU,CAACW,GAAG,CAACN,QAAQ,CAAC,CAACG,SAAS,CAACC,IAAI,IAAG;MACpDF,QAAQ,CAACE,IAAI,CAAC;IAChB,CAAC,EAAGC,KAAK,IAAI;MACXR,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEO,KAAK,CAAC;IAC5B,CAAC,CAAC;EACJ;EAAC,QAAAE,CAAA,G;qBApBUd,kBAAkB,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAlBrB,kBAAkB;IAAAsB,OAAA,EAAlBtB,kBAAkB,CAAAuB,IAAA;IAAAC,UAAA,EAFjB;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}