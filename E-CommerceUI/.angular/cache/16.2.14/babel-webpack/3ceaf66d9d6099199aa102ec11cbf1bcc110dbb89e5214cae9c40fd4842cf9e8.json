{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8080';\n  }\n  intercept(req, next) {\n    throw new Error('Method not implemented.');\n  }\n  login(loginId, password) {\n    const loginData = {\n      loginId,\n      password\n    };\n    return this.http.post(this.apiUrl, loginData);\n  }\n  static #_ = this.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["AuthService","constructor","http","apiUrl","intercept","req","next","Error","login","loginId","password","loginData","post","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["E:\\FrontEnd\\E-CommerceUI\\src\\app\\services\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService implements HttpInterceptor{\nprivate apiUrl = 'http://localhost:8080';\n\n  constructor(private http:HttpClient) { }\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    throw new Error('Method not implemented.');\n  }\n\n  login(loginId: string , password: string): Observable<any> {\n    const loginData = {loginId , password};\n    return this.http.post<any>(this.apiUrl, loginData);\n  }\n}\n"],"mappings":";;AAOA,OAAM,MAAOA,WAAW;EAGtBC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IAFlB,KAAAC,MAAM,GAAG,uBAAuB;EAEC;EACvCC,SAASA,CAACC,GAAqB,EAAEC,IAAiB;IAChD,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;EAC5C;EAEAC,KAAKA,CAACC,OAAe,EAAGC,QAAgB;IACtC,MAAMC,SAAS,GAAG;MAACF,OAAO;MAAGC;IAAQ,CAAC;IACtC,OAAO,IAAI,CAACR,IAAI,CAACU,IAAI,CAAM,IAAI,CAACT,MAAM,EAAEQ,SAAS,CAAC;EACpD;EAAC,QAAAE,CAAA,G;qBAXUb,WAAW,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXlB,WAAW;IAAAmB,OAAA,EAAXnB,WAAW,CAAAoB,IAAA;IAAAC,UAAA,EAFV;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}