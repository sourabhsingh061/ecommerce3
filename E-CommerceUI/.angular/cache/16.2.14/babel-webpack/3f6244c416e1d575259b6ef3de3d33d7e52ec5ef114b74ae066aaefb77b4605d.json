{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./http-service.service\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n  }\n  intercept(req, next) {\n    if (localStorage.getItem('fname') && localStorage.getItem('token')) {\n      req = req.clone({\n        setHeaders: {\n          \"withCredentials\": \"true\",\n          \"name\": \"Naman\",\n          Authorization: this.http.getToken()\n        }\n      });\n    }\n    console.log(req.headers.get(\"Authorization\") + \"------------------->>>\");\n    return next.handle(req);\n  }\n  static #_ = this.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpServiceService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["AuthService","constructor","http","intercept","req","next","localStorage","getItem","clone","setHeaders","Authorization","getToken","console","log","headers","get","handle","_","i0","ɵɵinject","i1","HttpServiceService","_2","factory","ɵfac","providedIn"],"sources":["E:\\FrontEnd\\E-CommerceUI\\src\\app\\services\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { HttpServiceService } from './http-service.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService implements HttpInterceptor {\n\n  constructor(private http: HttpServiceService) { }\n  \n  intercept(req: HttpRequest<any>, next: HttpHandler) {\n\n    if (localStorage.getItem('fname') && localStorage.getItem('token')) {\n      req = req.clone({\n        setHeaders: {                               \n        \"withCredentials\" : \"true\",\n        \"name\" : \"Naman\",\n          \n          Authorization: this.http.getToken()\n        }\n      })\n    }         \n        console.log(req.headers.get(\"Authorization\")+\"------------------->>>\")\n    return next.handle(req);\n  }\n}"],"mappings":";;AAQA,OAAM,MAAOA,WAAW;EAEtBC,YAAoBC,IAAwB;IAAxB,KAAAA,IAAI,GAAJA,IAAI;EAAwB;EAEhDC,SAASA,CAACC,GAAqB,EAAEC,IAAiB;IAEhD,IAAIC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAID,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAE;MAClEH,GAAG,GAAGA,GAAG,CAACI,KAAK,CAAC;QACdC,UAAU,EAAE;UACZ,iBAAiB,EAAG,MAAM;UAC1B,MAAM,EAAG,OAAO;UAEdC,aAAa,EAAE,IAAI,CAACR,IAAI,CAACS,QAAQ;;OAEpC,CAAC;;IAEAC,OAAO,CAACC,GAAG,CAACT,GAAG,CAACU,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC,GAAC,wBAAwB,CAAC;IAC1E,OAAOV,IAAI,CAACW,MAAM,CAACZ,GAAG,CAAC;EACzB;EAAC,QAAAa,CAAA,G;qBAlBUjB,WAAW,EAAAkB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,kBAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXtB,WAAW;IAAAuB,OAAA,EAAXvB,WAAW,CAAAwB,IAAA;IAAAC,UAAA,EAFV;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}