{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/auth.service\";\nimport * as i2 from \"../services/http-service.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction LoginComponent_span_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.inputerror[\"loginId\"]);\n  }\n}\nfunction LoginComponent_span_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.inputerror[\"password\"]);\n  }\n}\nexport class LoginComponent {\n  constructor(authService, httpService, router, rout) {\n    this.authService = authService;\n    this.httpService = httpService;\n    this.router = router;\n    this.rout = rout;\n    this.endpoint = \" http://localhost:8080/Auth\";\n    this.form = {\n      error: false,\n      loginId: '',\n      password: ''\n    };\n    this.inputerror = {};\n    this.message = '';\n  }\n  ngOnInit() {\n    throw new Error('Method not implemented.');\n  }\n  onLogin() {\n    var _self = this;\n    this.httpService.post(this.endpoint + \"/login\", this.form, function (res) {\n      _self.inputerror = {};\n      if (res.result && res.result.inputerror) {\n        _self.inputerror = res.result.inputerror; // Assign errors from the backend to inputerror\n      }\n\n      if (res.success) {\n        // Handle successful login\n        _self.router.navigate(['/home']); // Example: navigate to home page\n      } else {\n        _self.message = 'Login failed. Please check your credentials.'; // Handle login failure\n      }\n    });\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.HttpServiceService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i3.ActivatedRoute));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 16,\n    vars: 4,\n    consts: [[1, \"login-container\"], [3, \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"loginId\"], [\"type\", \"text\", \"name\", \"loginId\", \"id\", \"loginId\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"class\", \"alertRedColor\", \"style\", \"color: red;\", 4, \"ngIf\"], [\"for\", \"password\"], [\"type\", \"password\", \"name\", \"password\", \"id\", \"password\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [1, \"alertRedColor\", 2, \"color\", \"red\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n        i0.ɵɵtext(2, \"Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_3_listener() {\n          return ctx.onLogin();\n        });\n        i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\", 3);\n        i0.ɵɵtext(6, \"LoginId\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_7_listener($event) {\n          return ctx.form.loginId = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(8, LoginComponent_span_8_Template, 2, 1, \"span\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 2)(10, \"label\", 6);\n        i0.ɵɵtext(11, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"input\", 7);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_12_listener($event) {\n          return ctx.form.password = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(13, LoginComponent_span_13_Template, 2, 1, \"span\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"button\", 8);\n        i0.ɵɵtext(15, \"Login\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngModel\", ctx.form.loginId);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.inputerror[\"loginId\"]);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.form.password);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.inputerror[\"password\"]);\n      }\n    },\n    dependencies: [i4.NgIf, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.RequiredValidator, i5.NgModel, i5.NgForm],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","inputerror","ctx_r1","LoginComponent","constructor","authService","httpService","router","rout","endpoint","form","error","loginId","password","message","ngOnInit","Error","onLogin","_self","post","res","result","success","navigate","_","ɵɵdirectiveInject","i1","AuthService","i2","HttpServiceService","i3","Router","ActivatedRoute","_2","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵlistener","LoginComponent_Template_form_ngSubmit_3_listener","LoginComponent_Template_input_ngModelChange_7_listener","$event","ɵɵtemplate","LoginComponent_span_8_Template","LoginComponent_Template_input_ngModelChange_12_listener","LoginComponent_span_13_Template","ɵɵproperty"],"sources":["E:\\FrontEnd\\E-CommerceUI\\src\\app\\login\\login.component.ts","E:\\FrontEnd\\E-CommerceUI\\src\\app\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\nimport { HttpServiceService } from '../services/http-service.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  endpoint = \" http://localhost:8080/Auth\";\n\n  form = {\n    error:false,\n    loginId : '',\n    password : ''\n  };\n\n  inputerror = {};\n  message ='';\nconstructor(private authService: AuthService , private httpService : HttpServiceService , private router:Router , private rout:ActivatedRoute){\n\n}\n  ngOnInit(): void {\n    throw new Error('Method not implemented.');\n  }\nonLogin() {\n  var _self = this;\n  this.httpService.post(this.endpoint + \"/login\", this.form, function (res: any) {\n    _self.inputerror = {};\n    if (res.result && res.result.inputerror) {\n      _self.inputerror = res.result.inputerror; // Assign errors from the backend to inputerror\n    }\n    if (res.success) {\n      // Handle successful login\n      _self.router.navigate(['/home']); // Example: navigate to home page\n    } else {\n      _self.message = 'Login failed. Please check your credentials.'; // Handle login failure\n    }\n  });\n}\n\n}","<div class=\"login-container\">\n    <h2>Login</h2>\n    <form (ngSubmit)=\"onLogin()\">\n        <div class=\"form-group\">\n            <label for=\"loginId\">LoginId</label>\n            <input type=\"text\" name=\"loginId\" id=\"loginId\" [(ngModel)]=\"form.loginId\" required class=\"form-control\">\n            <!-- Corrected error message display -->\n            <span *ngIf=\"inputerror['loginId']\" class=\"alertRedColor\" style=\"color: red;\">{{ inputerror['loginId'] }}</span>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"password\">Password</label>\n            <input type=\"password\" name=\"password\" id=\"password\" [(ngModel)]=\"form.password\" required class=\"form-control\">\n            <!-- Corrected error message display -->\n            <span *ngIf=\"inputerror['password']\" class=\"alertRedColor\" style=\"color: red;\">{{ inputerror['password'] }}</span>\n        </div>\n        <button type=\"submit\" class=\"btn btn-primary\">Login</button>\n    </form>\n</div>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}