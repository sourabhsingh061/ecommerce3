{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/auth.service\";\nimport * as i2 from \"../services/http-service.service\";\nimport * as i3 from \"@angular/router\";\nexport class LoginComponent {\n  constructor(authService, httpService, router, rout) {\n    this.authService = authService;\n    this.httpService = httpService;\n    this.router = router;\n    this.rout = rout;\n    this.endpoint = \" http://localhost:8080/Auth\";\n    this.form = {\n      error: false,\n      loginId: '',\n      password: ''\n    };\n    this.inputerror = {};\n    this.message = '';\n  }\n  onLogin() {\n    var _self = this;\n    this.httpService.post(this.endpoint + \"/login\", this.form, function (res) {\n      _self.inputerror = {};\n      if (res.result.inputerror) {\n        res.result.inputerror;\n      }\n    });\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.HttpServiceService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i3.ActivatedRoute));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 14,\n    vars: 2,\n    consts: [[1, \"login-container\"], [3, \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"loginId\"], [\"type\", \"text\", \"name\", \"loginId\", \"id\", \"loginId\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"password\"], [\"type\", \"password\", \"name\", \"password\", \"id\", \"password\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n        i0.ɵɵtext(2, \"Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_3_listener() {\n          return ctx.onLogin();\n        });\n        i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\", 3);\n        i0.ɵɵtext(6, \"LoginId\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_7_listener($event) {\n          return ctx.form.loginId = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"div\", 2)(9, \"label\", 5);\n        i0.ɵɵtext(10, \"password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"input\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_11_listener($event) {\n          return ctx.form.password = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(12, \"button\", 7);\n        i0.ɵɵtext(13, \"Login\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngModel\", ctx.form.loginId);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.form.password);\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["LoginComponent","constructor","authService","httpService","router","rout","endpoint","form","error","loginId","password","inputerror","message","onLogin","_self","post","res","result","_","i0","ɵɵdirectiveInject","i1","AuthService","i2","HttpServiceService","i3","Router","ActivatedRoute","_2","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","LoginComponent_Template_form_ngSubmit_3_listener","LoginComponent_Template_input_ngModelChange_7_listener","$event","LoginComponent_Template_input_ngModelChange_11_listener","ɵɵadvance","ɵɵproperty"],"sources":["E:\\FrontEnd\\E-CommerceUI\\src\\app\\login\\login.component.ts","E:\\FrontEnd\\E-CommerceUI\\src\\app\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\nimport { HttpServiceService } from '../services/http-service.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n\n  endpoint = \" http://localhost:8080/Auth\";\n\n  form = {\n    error:false,\n    loginId : '',\n    password : ''\n  };\n\n  inputerror = {};\n  message ='';\nconstructor(private authService: AuthService , private httpService : HttpServiceService , private router:Router , private rout:ActivatedRoute){\n\n}\n\nonLogin(){\n  var _self = this;\n  this.httpService.post(this.endpoint + \"/login\" , this.form , function (res:any){\n    _self.inputerror={};\n    if(res.result.inputerror){\n      res.result.inputerror;\n    }\n  })\n\n\n\n}\n","<div class=\"login-container\">\n    <h2>Login</h2>\n    <form (ngSubmit)=\"onLogin()\">\n        <div class=\"form-group\">\n            <label for=\"loginId\">LoginId</label>\n            <input type=\"text\" name=\"loginId\" id=\"loginId\" [(ngModel)]=\"form.loginId\" required class=\"form-control\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"password\">password</label>\n            <input type=\"password\" name=\"password\" id=\"password\"  [(ngModel)]=\"form.password\" required class=\"form-control\">\n        </div>\n        <button type=\"submit\" class=\"btn btn-primary\">Login</button>\n    </form>\n</div>"],"mappings":";;;;AAUA,OAAM,MAAOA,cAAc;EAY3BC,YAAoBC,WAAwB,EAAWC,WAAgC,EAAWC,MAAa,EAAWC,IAAmB;IAAzH,KAAAH,WAAW,GAAXA,WAAW;IAAwB,KAAAC,WAAW,GAAXA,WAAW;IAAgC,KAAAC,MAAM,GAANA,MAAM;IAAkB,KAAAC,IAAI,GAAJA,IAAI;IAV5H,KAAAC,QAAQ,GAAG,6BAA6B;IAExC,KAAAC,IAAI,GAAG;MACLC,KAAK,EAAC,KAAK;MACXC,OAAO,EAAG,EAAE;MACZC,QAAQ,EAAG;KACZ;IAED,KAAAC,UAAU,GAAG,EAAE;IACf,KAAAC,OAAO,GAAE,EAAE;EAGb;EAEAC,OAAOA,CAAA;IACL,IAAIC,KAAK,GAAG,IAAI;IAChB,IAAI,CAACX,WAAW,CAACY,IAAI,CAAC,IAAI,CAACT,QAAQ,GAAG,QAAQ,EAAG,IAAI,CAACC,IAAI,EAAG,UAAUS,GAAO;MAC5EF,KAAK,CAACH,UAAU,GAAC,EAAE;MACnB,IAAGK,GAAG,CAACC,MAAM,CAACN,UAAU,EAAC;QACvBK,GAAG,CAACC,MAAM,CAACN,UAAU;;IAEzB,CAAC,CAAC;EAIJ;EAAC,QAAAO,CAAA,G;qBA3BYlB,cAAc,EAAAmB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,kBAAA,GAAAL,EAAA,CAAAC,iBAAA,CAAAK,EAAA,CAAAC,MAAA,GAAAP,EAAA,CAAAC,iBAAA,CAAAK,EAAA,CAAAE,cAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAd5B,cAAc;IAAA6B,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCV3BhB,EAAA,CAAAkB,cAAA,aAA6B;QACrBlB,EAAA,CAAAmB,MAAA,YAAK;QAAAnB,EAAA,CAAAoB,YAAA,EAAK;QACdpB,EAAA,CAAAkB,cAAA,cAA6B;QAAvBlB,EAAA,CAAAqB,UAAA,sBAAAC,iDAAA;UAAA,OAAYL,GAAA,CAAAvB,OAAA,EAAS;QAAA,EAAC;QACxBM,EAAA,CAAAkB,cAAA,aAAwB;QACClB,EAAA,CAAAmB,MAAA,cAAO;QAAAnB,EAAA,CAAAoB,YAAA,EAAQ;QACpCpB,EAAA,CAAAkB,cAAA,eAAwG;QAAzDlB,EAAA,CAAAqB,UAAA,2BAAAE,uDAAAC,MAAA;UAAA,OAAAP,GAAA,CAAA7B,IAAA,CAAAE,OAAA,GAAAkC,MAAA;QAAA,EAA0B;QAAzExB,EAAA,CAAAoB,YAAA,EAAwG;QAE5GpB,EAAA,CAAAkB,cAAA,aAAwB;QACElB,EAAA,CAAAmB,MAAA,gBAAQ;QAAAnB,EAAA,CAAAoB,YAAA,EAAQ;QACtCpB,EAAA,CAAAkB,cAAA,gBAAgH;QAA1DlB,EAAA,CAAAqB,UAAA,2BAAAI,wDAAAD,MAAA;UAAA,OAAAP,GAAA,CAAA7B,IAAA,CAAAG,QAAA,GAAAiC,MAAA;QAAA,EAA2B;QAAjFxB,EAAA,CAAAoB,YAAA,EAAgH;QAEpHpB,EAAA,CAAAkB,cAAA,iBAA8C;QAAAlB,EAAA,CAAAmB,MAAA,aAAK;QAAAnB,EAAA,CAAAoB,YAAA,EAAS;;;QANTpB,EAAA,CAAA0B,SAAA,GAA0B;QAA1B1B,EAAA,CAAA2B,UAAA,YAAAV,GAAA,CAAA7B,IAAA,CAAAE,OAAA,CAA0B;QAInBU,EAAA,CAAA0B,SAAA,GAA2B;QAA3B1B,EAAA,CAAA2B,UAAA,YAAAV,GAAA,CAAA7B,IAAA,CAAAG,QAAA,CAA2B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}