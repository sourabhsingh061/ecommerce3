{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/auth.service\";\nexport class LoginComponent {\n  constructor(authService) {\n    this.authService = authService;\n    this.loginId = '';\n    this.password = '';\n  }\n  onLogin() {\n    this.authService.login(this.loginId, this.password).subscribe(res => {\n      console.log('login successfully', res);\n    }, error => {\n      console.error('login failed', error);\n    });\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 14,\n    vars: 0,\n    consts: [[1, \"login-container\"], [3, \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"loginId\"], [\"type\", \"text\", \"name\", \"loginId\", \"id\", \"loginId\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"password\"], [\"type\", \"password\", \"name\", \"password\", \"id\", \"password\", \"required\", \"\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n        i0.ɵɵtext(2, \"Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_3_listener() {\n          return ctx.onLogin();\n        });\n        i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\", 3);\n        i0.ɵɵtext(6, \"LoginId\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"input\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 2)(9, \"label\", 5);\n        i0.ɵɵtext(10, \"password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"button\", 7);\n        i0.ɵɵtext(13, \"Login\");\n        i0.ɵɵelementEnd()()();\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["LoginComponent","constructor","authService","loginId","password","onLogin","login","subscribe","res","console","log","error","_","i0","ɵɵdirectiveInject","i1","AuthService","_2","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","LoginComponent_Template_form_ngSubmit_3_listener","ɵɵelement"],"sources":["E:\\FrontEnd\\E-CommerceUI\\src\\app\\login\\login.component.ts","E:\\FrontEnd\\E-CommerceUI\\src\\app\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\nloginId : string = '';\npassword : string='';\n\nconstructor(private authService: AuthService){}\n\nonLogin(){\n  this.authService.login(this.loginId, this.password).subscribe(res =>{\n    console.log('login successfully' , res);\n  }, error =>{\n    console.error('login failed', error );\n  });\n}\n\n\n}\n","<div class=\"login-container\">\n    <h2>Login</h2>\n    <form (ngSubmit)=\"onLogin()\">\n        <div class=\"form-group\">\n            <label for=\"loginId\">LoginId</label>\n            <input type=\"text\" name=\"loginId\" id=\"loginId\" required class=\"form-control\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"password\">password</label>\n            <input type=\"password\" name=\"password\" id=\"password\" required class=\"form-control\">\n        </div>\n        <button type=\"submit\" class=\"btn btn-primary\">Login</button>\n    </form>\n</div>"],"mappings":";;AAQA,OAAM,MAAOA,cAAc;EAI3BC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAH/B,KAAAC,OAAO,GAAY,EAAE;IACrB,KAAAC,QAAQ,GAAU,EAAE;EAE0B;EAE9CC,OAAOA,CAAA;IACL,IAAI,CAACH,WAAW,CAACI,KAAK,CAAC,IAAI,CAACH,OAAO,EAAE,IAAI,CAACC,QAAQ,CAAC,CAACG,SAAS,CAACC,GAAG,IAAG;MAClEC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAGF,GAAG,CAAC;IACzC,CAAC,EAAEG,KAAK,IAAG;MACTF,OAAO,CAACE,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAE;IACvC,CAAC,CAAC;EACJ;EAAC,QAAAC,CAAA,G;qBAZYZ,cAAc,EAAAa,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAdjB,cAAc;IAAAkB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCR3BX,EAAA,CAAAa,cAAA,aAA6B;QACrBb,EAAA,CAAAc,MAAA,YAAK;QAAAd,EAAA,CAAAe,YAAA,EAAK;QACdf,EAAA,CAAAa,cAAA,cAA6B;QAAvBb,EAAA,CAAAgB,UAAA,sBAAAC,iDAAA;UAAA,OAAYL,GAAA,CAAApB,OAAA,EAAS;QAAA,EAAC;QACxBQ,EAAA,CAAAa,cAAA,aAAwB;QACCb,EAAA,CAAAc,MAAA,cAAO;QAAAd,EAAA,CAAAe,YAAA,EAAQ;QACpCf,EAAA,CAAAkB,SAAA,eAA6E;QACjFlB,EAAA,CAAAe,YAAA,EAAM;QACNf,EAAA,CAAAa,cAAA,aAAwB;QACEb,EAAA,CAAAc,MAAA,gBAAQ;QAAAd,EAAA,CAAAe,YAAA,EAAQ;QACtCf,EAAA,CAAAkB,SAAA,gBAAmF;QACvFlB,EAAA,CAAAe,YAAA,EAAM;QACNf,EAAA,CAAAa,cAAA,iBAA8C;QAAAb,EAAA,CAAAc,MAAA,aAAK;QAAAd,EAAA,CAAAe,YAAA,EAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}