{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common/http\";\nexport class HttpServiceService {\n  constructor(router, httpClient) {\n    this.router = router;\n    this.httpClient = httpClient;\n    this.token = '';\n  }\n  // Set the token and store it in localStorage\n  setToken(token) {\n    this.token = token;\n    localStorage.setItem('token', token);\n  }\n  // Get the token from localStorage\n  getToken() {\n    return localStorage.getItem('token');\n  }\n  // Generic GET request with JWT token\n  get(endpoint, callBack) {\n    const headers = new HttpHeaders().set('Authorization', `Bearer ${this.getToken()}`);\n    return this.httpClient.get(endpoint, {\n      headers\n    }).subscribe(data => {\n      console.log('Data:', data);\n      callBack(data);\n    }, error => {\n      console.log('ORS Error ', error);\n    });\n  }\n  // Generic POST request with JWT token\n  post(endpoint, bean, callBack) {\n    const headers = new HttpHeaders().set('Authorization', `Bearer ${this.getToken()}`);\n    return this.httpClient.post(endpoint, bean, {\n      headers\n    }).subscribe(data => {\n      console.log(data);\n      callBack(data);\n    }, error => {\n      console.log('ORS Error ', error);\n    });\n  }\n  static #_ = this.ɵfac = function HttpServiceService_Factory(t) {\n    return new (t || HttpServiceService)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: HttpServiceService,\n    factory: HttpServiceService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","HttpServiceService","constructor","router","httpClient","token","setToken","localStorage","setItem","getToken","getItem","get","endpoint","callBack","headers","set","subscribe","data","console","log","error","post","bean","_","i0","ɵɵinject","i1","Router","i2","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["E:\\FrontEnd\\E-CommerceUI\\src\\app\\services\\http-service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HttpServiceService {\n  private token = '';\n\n  constructor(private router: Router, private httpClient: HttpClient) {}\n\n  // Set the token and store it in localStorage\n  setToken(token: string) {\n    this.token = token;\n    localStorage.setItem('token', token);\n  }\n\n  // Get the token from localStorage\n  getToken(): string | null {\n    return localStorage.getItem('token');\n  }\n\n  // Generic GET request with JWT token\n  get(endpoint: string, callBack: (data: any) => void) {\n    const headers = new HttpHeaders().set(\n      'Authorization',\n      `Bearer ${this.getToken()}`\n    );\n    return this.httpClient.get(endpoint, { headers }).subscribe(\n      (data) => {\n        console.log('Data:', data);\n        callBack(data);\n      },\n      (error) => {\n        console.log('ORS Error ', error);\n      }\n    );\n  }\n\n  // Generic POST request with JWT token\n  post(endpoint: string, bean: any, callBack: (data: any) => void) {\n    const headers = new HttpHeaders().set(\n      'Authorization',\n      `Bearer ${this.getToken()}`\n    );\n    return this.httpClient.post(endpoint, bean, { headers }).subscribe(\n      (data) => {\n        console.log(data);\n        callBack(data);\n      },\n      (error) => {\n        console.log('ORS Error ', error);\n      }\n    );\n  }\n}\n"],"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;;;;AAM9D,OAAM,MAAOC,kBAAkB;EAG7BC,YAAoBC,MAAc,EAAUC,UAAsB;IAA9C,KAAAD,MAAM,GAANA,MAAM;IAAkB,KAAAC,UAAU,GAAVA,UAAU;IAF9C,KAAAC,KAAK,GAAG,EAAE;EAEmD;EAErE;EACAC,QAAQA,CAACD,KAAa;IACpB,IAAI,CAACA,KAAK,GAAGA,KAAK;IAClBE,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,KAAK,CAAC;EACtC;EAEA;EACAI,QAAQA,CAAA;IACN,OAAOF,YAAY,CAACG,OAAO,CAAC,OAAO,CAAC;EACtC;EAEA;EACAC,GAAGA,CAACC,QAAgB,EAAEC,QAA6B;IACjD,MAAMC,OAAO,GAAG,IAAId,WAAW,EAAE,CAACe,GAAG,CACnC,eAAe,EACf,UAAU,IAAI,CAACN,QAAQ,EAAE,EAAE,CAC5B;IACD,OAAO,IAAI,CAACL,UAAU,CAACO,GAAG,CAACC,QAAQ,EAAE;MAAEE;IAAO,CAAE,CAAC,CAACE,SAAS,CACxDC,IAAI,IAAI;MACPC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEF,IAAI,CAAC;MAC1BJ,QAAQ,CAACI,IAAI,CAAC;IAChB,CAAC,EACAG,KAAK,IAAI;MACRF,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEC,KAAK,CAAC;IAClC,CAAC,CACF;EACH;EAEA;EACAC,IAAIA,CAACT,QAAgB,EAAEU,IAAS,EAAET,QAA6B;IAC7D,MAAMC,OAAO,GAAG,IAAId,WAAW,EAAE,CAACe,GAAG,CACnC,eAAe,EACf,UAAU,IAAI,CAACN,QAAQ,EAAE,EAAE,CAC5B;IACD,OAAO,IAAI,CAACL,UAAU,CAACiB,IAAI,CAACT,QAAQ,EAAEU,IAAI,EAAE;MAAER;IAAO,CAAE,CAAC,CAACE,SAAS,CAC/DC,IAAI,IAAI;MACPC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACjBJ,QAAQ,CAACI,IAAI,CAAC;IAChB,CAAC,EACAG,KAAK,IAAI;MACRF,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEC,KAAK,CAAC;IAClC,CAAC,CACF;EACH;EAAC,QAAAG,CAAA,G;qBAhDUtB,kBAAkB,EAAAuB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,MAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAlB7B,kBAAkB;IAAA8B,OAAA,EAAlB9B,kBAAkB,CAAA+B,IAAA;IAAAC,UAAA,EAFjB;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}